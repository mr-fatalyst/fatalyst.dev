{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"Hey everyone!   I am mr_Fatalyst (Nikita Ryzhenkov).   <p>Building tools and architectures I genuinely want to use myself. Prioritizing clarity, clean code, and predictable behavior. No magic \u2014 just thoughtful, intentional design. <sub>Who am I kidding? Duct tape and reinvention are half the fun.</sub></p>"},{"location":"#open-source","title":"Open Source","text":"Project Description FastOpenAPI A library for generating and integrating OpenAPI schemas using Pydantic and various frameworks. FastArch Unpublished"},{"location":"#why-these-things-exist","title":"Why these things exist","text":"<p>To make things that feel right to use. To reduce the friction I meet every day. To avoid explaining the same thing twice. To stop copy-pasting boilerplate for the hundredth time.</p>"},{"location":"fastopenapi/","title":"","text":"<p> FastOpenAPI is a library for generating and integrating OpenAPI schemas using Pydantic and various frameworks. </p> <p>   This project was inspired by FastAPI and aims to provide a similar developer-friendly experience. </p> <p> </p>"},{"location":"fastopenapi/#links","title":"Links","text":"<ul> <li>Documentation: Docs</li> <li>Repository: GitHub</li> <li>PyPi: FastOpenAPI</li> </ul>"},{"location":"fastopenapi/#why-fastopenapi","title":"Why FastOpenAPI?","text":"<p>It was built out of frustration with fragmented tooling and inconsistent documentation standards across frameworks. FastOpenAPI aims to bring the developer experience of FastAPI \u2014 automatic docs, validation, and schema generation \u2014 to any Python web stack, with minimal dependencies and maximum control.</p> <p>FastOpenAPI is especially useful when:</p> <ul> <li>You want OpenAPI documentation without being locked into a single framework</li> <li>You need consistent API docs across a multi-service architecture</li> <li>You prefer Pydantic v2 models and want tight integration.</li> </ul> <p>Most OpenAPI tools are tied to a specific framework, like FastAPI or Flask. FastOpenAPI breaks that limitation by offering a shared, flexible engine that works across:</p> <ul> <li>AioHttp</li> <li>Flask</li> <li>Falcon</li> <li>Quart</li> <li>Starlette</li> <li>Sanic</li> <li>Tornado</li> </ul> <p>Instead of forcing migration to a specific stack, FastOpenAPI uses lightweight \"proxy routing\" to register endpoints in a FastAPI-like style \u2014 while integrating directly with your existing framework.</p> <p>The library supports router composition (like FastAPI's <code>APIRouter</code>), automatic Swagger and ReDoc generation, and provides strong Pydantic v2-based typing and validation.</p>"}]}